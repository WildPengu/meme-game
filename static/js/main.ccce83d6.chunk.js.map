{"version":3,"sources":["images/emotes/joyPengu.PNG","images/emotes/perfect.PNG","images/emotes/dabPengu.PNG","images/emotes/beeHappy.PNG","images/emotes/happyCat.PNG","images/emotes/happyPengu.PNG","images/emotes/jinx.PNG","images/emotes/meow.PNG","images/emotes/rammus.PNG","images/emotes/iLoveIt.PNG","images/memes/pozytywnyOpos.jpg","images/emotes/sadKitten.PNG","images/memes/eca.jpg","Player.js","Team.js","AddPlayer.js","Admin.js","AchievementsContainer.js","App.js","index.js"],"names":["module","exports","Player","props","state","id","player","name","points","getPointRecently","style","achievements","series","coldSeries","goodAnwsers","className","key","this","admin","onClick","addPoints","canRemove","substractPoint","deletePlayer","React","Component","Team","players","map","i","lastActionId","AddPlayer","onSubmit","e","preventDefault","value","inputValue","onChange","getInputValue","addNewPlayer","error","Admin","changeAdminStatus","AchievementsContainer","achievement","j","backgroundImage","rounds","App","idCounter","addPlayer","pointsAmount","opacity","previousPlayers","trimInputValue","trim","setState","inputValidation","length","newPlayer","previousState","target","filter","subtractPoint","setDeleteToUnactive","findIndex","setPlayerSeries","JSON","parse","stringify","checkAchievementsForDuplicates","image","noDuplicate","addAchievementSeries","whenActive","push","addAchievementFirstBlood","round","addAchievementPoints","mileStone","setAchievements","joyPengu","perfect","pozytywnyOpos","sadKitten","ruinedDay","dabPengu","beeHappy","happyCat","happyPengu","iLoveIt","jinx","meow","rammus","display","ReactDOM","render","document","getElementById"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,4OCoD5BC,G,8DAjDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,GAAI,EAAKF,MAAMG,OAAOD,GACtBE,KAAM,EAAKJ,MAAMG,OAAOC,KACxBC,OAAQ,EAAKL,MAAMG,OAAOE,OAC1BC,iBAAkB,EAAKN,MAAMG,OAAOG,iBACpCC,MAAO,EAAKP,MAAMG,OAAOI,MACzBC,aAAc,EAAKR,MAAMG,OAAOK,aAChCC,OAAQ,EAAKT,MAAMG,OAAOM,OAC1BC,WAAY,EAAKV,MAAMU,WACvBC,YAAa,EAAKX,MAAMW,aAXT,E,mDAeZX,GAAQ,IAAD,OACZ,OACE,yBAAKY,UAAU,SAASC,IAAKC,KAAKb,MAAMC,IACtC,8BAAOY,KAAKb,MAAMG,MAClB,yBAAKQ,UAAU,yBACb,0BAAMA,UAAU,gBAAgBE,KAAKd,MAAMG,OAAOE,QACjDS,KAAKd,MAAMe,MACV,0BAAMH,UAAU,iBAAhB,IACIE,KAAKd,MAAMG,OAAOQ,YADtB,KAGE,KACJ,yBACEC,UAAU,YACVI,QAAS,kBAAM,EAAKhB,MAAMiB,UAAU,EAAKhB,MAAMC,OAEhDY,KAAKd,MAAMe,OAASD,KAAKd,MAAMkB,YAAcJ,KAAKb,MAAMC,GACvD,yBACEK,MAAOO,KAAKb,MAAMM,MAClBK,UAAU,kBACVI,QAAS,kBAAM,EAAKhB,MAAMmB,eAAe,EAAKlB,MAAMC,OAEpD,KACHY,KAAKd,MAAMe,MACV,uBACEH,UAAU,uBACVI,QAAS,kBAAM,EAAKhB,MAAMoB,kBAE1B,W,GA3COC,IAAMC,YCkBZC,EAhBF,SAAAvB,GACX,IAAMG,EAASH,EAAMwB,QAAQC,KAAI,SAACtB,EAAQuB,GAAT,OAC/B,kBAAC,EAAD,CACEb,IAAKa,EACLvB,OAAQA,EACRc,UAAWjB,EAAMiB,UACjBE,eAAgBnB,EAAMmB,eACtBC,aAAc,kBAAMpB,EAAMoB,aAAajB,EAAOD,KAC9Ca,MAAOf,EAAMe,MACbG,UAAWlB,EAAM2B,kBAIrB,OAAO,yBAAKf,UAAU,iBAAiBT,ICU1ByB,G,MAxBG,SAAA5B,GAIhB,OACE,oCACE,0BAAMY,UAAU,qBAAqBiB,SALpB,SAAAC,GACnBA,EAAEC,mBAKG/B,EAAMe,MACL,6BACE,yBAAKH,UAAU,2BACb,2BACEoB,MAAOhC,EAAMiC,WACbC,SAAUlC,EAAMmC,gBAElB,4BAAQnB,QAAShB,EAAMoC,cAAvB,MAEF,0BAAMxB,UAAU,SAASZ,EAAMqC,QAE/B,SCVGC,G,MARD,SAAAtC,GACZ,OACE,yBAAKY,UAAU,kBACb,yBAAKI,QAAShB,EAAMuC,kBAAmB3B,UAAU,kB,gBCiBxC4B,G,MApBe,SAAAxC,GAC5B,IAAMQ,EAAeR,EAAMwB,QAAQC,KAAI,WAAmBC,GAAnB,IAAGlB,EAAH,EAAGA,aAAH,OACrC,yBAAKK,IAAKa,EAAGd,UAAU,sBACpBJ,EAAaiB,KAAI,SAACgB,EAAaC,GAAd,OAChB,yBACE7B,IAAK6B,EACL9B,UAAU,cACVL,MAAO,CAAEoC,gBAAgB,OAAD,OAASF,EAAT,eAMhC,OACE,yBAAK7B,UAAU,yBACZZ,EAAM4C,OAAS,EAAIpC,EAAe,Q,0MC8Q1BqC,E,4MA3QbC,UAAY,E,EACZ7C,MAAQ,CACNc,OAAO,EACPgC,UAAW,GACXV,MAAO,GACPW,aAAc,EACdrB,aAAc,EACdH,QAAS,CACP,CACEtB,GAAI,EACJE,KAAM,SACNC,OAAQ,EACRC,kBAAkB,EAClBC,MAAO,CAAE0C,QAAS,KAClBzC,aAAc,GACdC,OAAQ,EACRC,WAAY,EACZC,YAAa,GAEf,CACET,GAAI,EACJE,KAAM,aACNC,OAAQ,EACRC,kBAAkB,EAClBC,MAAO,CAAE0C,QAAS,KAClBzC,aAAc,GACdC,OAAQ,EACRC,WAAY,EACZC,YAAa,GAEf,CACET,GAAI,EACJE,KAAM,WACNC,OAAQ,EACRC,kBAAkB,EAClBC,MAAO,CAAE0C,QAAS,KAClBzC,aAAc,GACdC,OAAQ,EACRC,WAAY,EACZC,YAAa,IAGjBuC,gBAAiB,I,EAGnBC,eAAiB,WACf,IAAIlB,EAAa,EAAKhC,MAAM8C,UAK5B,OAJAd,EAAaA,EAAWmB,OACxB,EAAKC,SAAS,CACZN,UAAWd,IAENA,G,EAGTqB,gBAAkB,WAChB,MAA8B,KAA1B,EAAKH,kBACP,EAAKE,SAAS,CACZhB,MAAO,sBAEF,KACE,EAAKc,iBAAiBI,OAAS,UACxC,EAAKF,SAAS,CACZhB,MAAO,2B,EAObD,aAAe,WACb,GAAI,EAAKkB,kBAAmB,CAC1B,IAAME,EAAY,CAChBtD,GAAI,EAAK4C,UACT1C,KAAM,EAAK+C,iBACX9C,OAAQ,EACRE,MAAO,CAAE0C,QAAS,OAClBzC,aAAc,GACdC,OAAQ,EACRC,WAAY,EACZC,YAAa,GAEf,EAAKmC,YAEL,EAAKO,UAAS,SAACI,GACb,MAAO,CAAEjC,QAAQ,GAAD,mBAAMiC,EAAcjC,SAApB,CAA6BgC,QAE/C,EAAKH,SAAS,CACZN,UAAW,GACXV,MAAO,O,EAKbF,cAAgB,SAACL,GACf,EAAKuB,SAAS,CACZN,UAAWjB,EAAE4B,OAAO1B,S,EAIxBZ,aAAe,SAAClB,GACd,IAAIsB,EAAU,EAAKvB,MAAMuB,QAAQmC,QAAO,SAACxD,GACvC,OAAOA,EAAOD,KAAOA,KAEvB,EAAKmD,SAAS,CAAE7B,a,EAGlBoC,cAAgB,SAAC1D,GACf,EAAKmD,SAAS,CACZ7B,QAAS,EAAKvB,MAAMiD,gBACpBF,aAAc,EAAK/C,MAAM+C,aAAe,EACxCrB,aAAc,K,EAIlBkC,oBAAsB,SAAC3D,GACP,EAAKD,MAAMuB,QACjBsC,WAAU,SAAC3D,GACbA,EAAOD,KAAOA,IAChBC,EAAOG,kBAAmB,EAC1BH,EAAOI,MAAQ,CAAE0C,QAAS,Y,EAKhCc,gBAAkB,SAAC7D,EAAIsB,GAarB,OAZAA,EAAQsC,WAAU,SAAC3D,GACbA,EAAOD,KAAOA,EAChBC,EAAOM,SAEPN,EAAOM,OAAS,EAEdN,EAAOD,KAAOA,EAChBC,EAAOO,aAEPP,EAAOO,WAAa,KAGjBc,G,EAGTP,UAAY,SAACf,GACX,IAAMgD,EAAkBc,KAAKC,MAAMD,KAAKE,UAAU,EAAKjE,MAAMuB,UACzDA,EAAU,EAAKvB,MAAMuB,QACzBA,EAAQsC,WAAU,SAAC3D,GACbA,EAAOD,KAAOA,IAChBC,EAAOE,OAASF,EAAOE,OAAS,EAAKJ,MAAM+C,aAC3C7C,EAAOQ,cACPR,EAAOG,kBAAmB,EAC1BH,EAAOI,MAAQ,CAAE0C,QAAS,SAG9BzB,EAAU,EAAKuC,gBAAgB7D,EAAIsB,GACnC,EAAKqC,oBAAoB3D,GACzB,EAAKmD,SAAS,CACZ1B,aAAczB,EACdsB,UACA0B,gBAAiBA,EACjBF,aAAc,EAAK/C,MAAM+C,aAAe,K,EAI5CT,kBAAoB,WAClB,EAAKc,SAAS,CACZtC,OAAQ,EAAKd,MAAMc,MACnBsB,MAAO,M,EAIX8B,+BAAiC,SAAChE,EAAQiE,GACxC,IAAIC,GAAc,EAMlB,OALAlE,EAAOK,aAAaiB,KAAI,SAACgB,GACnBA,IAAgB2B,IAClBC,GAAc,MAGXA,G,EAGTC,qBAAuB,SAACF,EAAOjE,EAAQoE,EAAY9D,GAE/CA,IAAW8D,GACX,EAAKJ,+BAA+BhE,EAAQiE,IAE5CjE,EAAOK,aAAagE,KAAKJ,I,EAI7BK,yBAA2B,SAACL,EAAOjE,EAAQuE,GAE7B,IAAVA,GACA,EAAKP,+BAA+BhE,EAAQiE,IAC5CjE,EAAOM,OAAS,GAEhBN,EAAOK,aAAagE,KAAKJ,I,EAI7BO,qBAAuB,SAACP,EAAOjE,EAAQyE,GAEnCzE,EAAOE,QAAUuE,GACjB,EAAKT,+BAA+BhE,EAAQiE,IAE5CjE,EAAOK,aAAagE,KAAKJ,I,EAI7BS,gBAAkB,WAChB,IAAMH,EAAQ,EAAKzE,MAAM+C,aAgBzB,OAfgB,EAAK/C,MAAMuB,QAAQC,KAAI,SAACtB,GACtC,EAAKmE,qBAAqBQ,IAAU3E,EAAQ,EAAGA,EAAOM,QACtD,EAAK6D,qBAAqBS,IAAS5E,EAAQ,EAAGA,EAAOM,QACrD,EAAK6D,qBAAqBU,IAAe7E,EAAQ,EAAGA,EAAOO,YAC3D,EAAK4D,qBAAqBW,IAAW9E,EAAQ,EAAGA,EAAOO,YACvD,EAAK4D,qBAAqBY,IAAW/E,EAAQ,GAAIA,EAAOO,YACxD,EAAK+D,yBAAyBU,IAAUhF,EAAQuE,GAChD,EAAKC,qBAAqBS,IAAUjF,EAAQ,GAC5C,EAAKwE,qBAAqBU,IAAUlF,EAAQ,IAC5C,EAAKwE,qBAAqBW,IAAYnF,EAAQ,IAC9C,EAAKwE,qBAAqBY,IAASpF,EAAQ,IAC3C,EAAKwE,qBAAqBa,IAAMrF,EAAQ,IACxC,EAAKwE,qBAAqBc,IAAMtF,EAAQ,KACxC,EAAKwE,qBAAqBe,IAAQvF,EAAQ,S,uDAO5C,OADAW,KAAK+D,kBAEH,yBAAKjE,UAAU,iBACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEqB,WAAYnB,KAAKb,MAAM8C,UACvBZ,cAAerB,KAAKqB,cACpBC,aAActB,KAAKsB,aACnBrB,MAAOD,KAAKb,MAAMc,MAClBsB,MAAOvB,KAAKb,MAAMoC,QAEpB,kBAAC,EAAD,CAAOE,kBAAmBzB,KAAKyB,qBAEjC,yBAAK3B,UAAU,gBAAf,iBACiBE,KAAKb,MAAM+C,cAG3BlC,KAAKb,MAAMuB,QAAQ+B,OAAS,EAC3B,yBAAKhD,MAAO,CAAEoF,QAAS,SACrB,kBAAC,EAAD,CACEnE,QAASV,KAAKb,MAAMuB,QACpBJ,aAAcN,KAAKM,aACnBL,MAAOD,KAAKb,MAAMc,MAClBE,UAAWH,KAAKG,UAChBE,eAAgBL,KAAK8C,cACrBjC,aAAcb,KAAKb,MAAM0B,eAE3B,kBAAC,EAAD,CACEH,QAASV,KAAKb,MAAMuB,QACpBoB,OAAQ9B,KAAKb,MAAM+C,gBAIvB,yBAAKpC,UAAU,iBAAf,+B,GArQQS,IAAMC,WChBxBsE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ccce83d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/joyPengu.b75dbbe0.PNG\";","module.exports = __webpack_public_path__ + \"static/media/perfect.69896781.PNG\";","module.exports = __webpack_public_path__ + \"static/media/dabPengu.33cf5a77.PNG\";","module.exports = __webpack_public_path__ + \"static/media/beeHappy.2428da8d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/happyCat.c49704e4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/happyPengu.3eb11dfe.PNG\";","module.exports = __webpack_public_path__ + \"static/media/jinx.2f70fb94.PNG\";","module.exports = __webpack_public_path__ + \"static/media/meow.095aefd4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/rammus.8bbbac1e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/iLoveIt.fcd25223.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pozytywnyOpos.28e64c5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sadKitten.cf8d88bb.PNG\";","module.exports = __webpack_public_path__ + \"static/media/eca.c9188319.jpg\";","import React from \"react\";\r\n\r\nclass Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: this.props.player.id,\r\n      name: this.props.player.name,\r\n      points: this.props.player.points,\r\n      getPointRecently: this.props.player.getPointRecently,\r\n      style: this.props.player.style,\r\n      achievements: this.props.player.achievements,\r\n      series: this.props.player.series,\r\n      coldSeries: this.props.coldSeries,\r\n      goodAnwsers: this.props.goodAnwsers\r\n    };\r\n  }\r\n\r\n  render(props) {\r\n    return (\r\n      <div className=\"player\" key={this.state.id}>\r\n        <span>{this.state.name}</span>\r\n        <div className=\"playerImagesContainer\">\r\n          <span className=\"playerPoints\">{this.props.player.points}</span>\r\n          {this.props.admin ? (\r\n            <span className=\"playerAnswers\">\r\n              ({this.props.player.goodAnwsers})\r\n            </span>\r\n          ) : null}\r\n          <div\r\n            className=\"addPoints\"\r\n            onClick={() => this.props.addPoints(this.state.id)}\r\n          ></div>\r\n          {this.props.admin && this.props.canRemove === this.state.id ? (\r\n            <div\r\n              style={this.state.style}\r\n              className=\"substractPoints\"\r\n              onClick={() => this.props.substractPoint(this.state.id)}\r\n            ></div>\r\n          ) : null}\r\n          {this.props.admin ? (\r\n            <i\r\n              className=\"trash alternate icon\"\r\n              onClick={() => this.props.deletePlayer()}\r\n            ></i>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport \"./styles/Team.css\";\r\nimport Player from \"./Player\";\r\n\r\nconst Team = props => {\r\n  const player = props.players.map((player, i) => (\r\n    <Player\r\n      key={i}\r\n      player={player}\r\n      addPoints={props.addPoints}\r\n      substractPoint={props.substractPoint}\r\n      deletePlayer={() => props.deletePlayer(player.id)}\r\n      admin={props.admin}\r\n      canRemove={props.lastActionId}\r\n    />\r\n  ));\r\n\r\n  return <div className=\"teamContainer\">{player}</div>;\r\n};\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\nimport \"./styles/AddPlayer.css\";\r\n\r\nconst AddPlayer = props => {\r\n  const onFormSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"addPlayerContainer\" onSubmit={onFormSubmit}>\r\n        {props.admin ? (\r\n          <div>\r\n            <div className=\"inputAndButtonContainer\">\r\n              <input\r\n                value={props.inputValue}\r\n                onChange={props.getInputValue}\r\n              />\r\n              <button onClick={props.addNewPlayer}>+</button>\r\n            </div>\r\n            <span className=\"error\">{props.error}</span>\r\n          </div>\r\n        ) : null}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPlayer;\r\n","import React from \"react\";\r\nimport \"./styles/Admin.css\";\r\n\r\nconst Admin = props => {\r\n  return (\r\n    <div className=\"adminContainer\">\r\n      <div onClick={props.changeAdminStatus} className=\"gearsImage\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport \"./styles/AchievementsContainer.css\";\r\n\r\nconst AchievementsContainer = props => {\r\n  const achievements = props.players.map(({ achievements }, i) => (\r\n    <div key={i} className=\"playerAchievements\">\r\n      {achievements.map((achievement, j) => (\r\n        <div\r\n          key={j}\r\n          className=\"achievement\"\r\n          style={{ backgroundImage: `url(${achievement})` }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"achievementsContainer\">\r\n      {props.rounds > 1 ? achievements : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AchievementsContainer;\r\n","import React from \"react\";\r\nimport \"./styles/App.css\";\r\nimport Team from \"./Team\";\r\nimport AddPlayer from \"./AddPlayer\";\r\nimport Admin from \"./Admin\";\r\nimport joyPengu from \"./images/emotes/joyPengu.PNG\";\r\nimport AchievementsContainer from \"./AchievementsContainer\";\r\nimport perfect from \"./images/emotes/perfect.PNG\";\r\nimport dabPengu from \"./images/emotes/dabPengu.PNG\";\r\nimport beeHappy from \"./images/emotes/beeHappy.PNG\";\r\nimport happyCat from \"./images/emotes/happyCat.PNG\";\r\nimport happyPengu from \"./images/emotes/happyPengu.PNG\";\r\nimport jinx from \"./images/emotes/jinx.PNG\";\r\nimport meow from \"./images/emotes/meow.PNG\";\r\nimport rammus from \"./images/emotes/rammus.PNG\";\r\nimport iLoveIt from \"./images/emotes/iLoveIt.PNG\";\r\nimport pozytywnyOpos from \"./images/memes/pozytywnyOpos.jpg\";\r\nimport sadKitten from \"./images/emotes/sadKitten.PNG\";\r\nimport ruinedDay from \"./images/memes/eca.jpg\";\r\n\r\nclass App extends React.Component {\r\n  idCounter = 4;\r\n  state = {\r\n    admin: false,\r\n    addPlayer: \"\",\r\n    error: \"\",\r\n    pointsAmount: 1,\r\n    lastActionId: 0,\r\n    players: [\r\n      {\r\n        id: 1,\r\n        name: \"Puszek\",\r\n        points: 0,\r\n        getPointRecently: false,\r\n        style: { opacity: \"1\" },\r\n        achievements: [],\r\n        series: 0,\r\n        coldSeries: 0,\r\n        goodAnwsers: 0,\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Mickiewicz\",\r\n        points: 0,\r\n        getPointRecently: false,\r\n        style: { opacity: \"1\" },\r\n        achievements: [],\r\n        series: 0,\r\n        coldSeries: 0,\r\n        goodAnwsers: 0,\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Muffinka\",\r\n        points: 0,\r\n        getPointRecently: false,\r\n        style: { opacity: \"1\" },\r\n        achievements: [],\r\n        series: 0,\r\n        coldSeries: 0,\r\n        goodAnwsers: 0,\r\n      },\r\n    ],\r\n    previousPlayers: [],\r\n  };\r\n\r\n  trimInputValue = () => {\r\n    let inputValue = this.state.addPlayer;\r\n    inputValue = inputValue.trim();\r\n    this.setState({\r\n      addPlayer: inputValue,\r\n    });\r\n    return inputValue;\r\n  };\r\n\r\n  inputValidation = () => {\r\n    if (this.trimInputValue() === \"\") {\r\n      this.setState({\r\n        error: \"Type player name\",\r\n      });\r\n      return false;\r\n    } else if (this.trimInputValue().length > 15) {\r\n      this.setState({\r\n        error: \"Your nick is too long\",\r\n      });\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  addNewPlayer = () => {\r\n    if (this.inputValidation()) {\r\n      const newPlayer = {\r\n        id: this.idCounter,\r\n        name: this.trimInputValue(),\r\n        points: 0,\r\n        style: { opacity: \"0.5\" },\r\n        achievements: [],\r\n        series: 0,\r\n        coldSeries: 0,\r\n        goodAnwsers: 0,\r\n      };\r\n      this.idCounter++;\r\n\r\n      this.setState((previousState) => {\r\n        return { players: [...previousState.players, newPlayer] };\r\n      });\r\n      this.setState({\r\n        addPlayer: \"\",\r\n        error: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  getInputValue = (e) => {\r\n    this.setState({\r\n      addPlayer: e.target.value,\r\n    });\r\n  };\r\n\r\n  deletePlayer = (id) => {\r\n    let players = this.state.players.filter((player) => {\r\n      return player.id !== id;\r\n    });\r\n    this.setState({ players });\r\n  };\r\n\r\n  subtractPoint = (id) => {\r\n    this.setState({\r\n      players: this.state.previousPlayers,\r\n      pointsAmount: this.state.pointsAmount - 1,\r\n      lastActionId: 0,\r\n    });\r\n  };\r\n\r\n  setDeleteToUnactive = (id) => {\r\n    let players = this.state.players;\r\n    players.findIndex((player) => {\r\n      if (player.id !== id) {\r\n        player.getPointRecently = false;\r\n        player.style = { opacity: \"0.5\" };\r\n      }\r\n    });\r\n  };\r\n\r\n  setPlayerSeries = (id, players) => {\r\n    players.findIndex((player) => {\r\n      if (player.id === id) {\r\n        player.series++;\r\n      } else {\r\n        player.series = 0;\r\n      }\r\n      if (player.id !== id) {\r\n        player.coldSeries++;\r\n      } else {\r\n        player.coldSeries = 0;\r\n      }\r\n    });\r\n    return players;\r\n  };\r\n\r\n  addPoints = (id) => {\r\n    const previousPlayers = JSON.parse(JSON.stringify(this.state.players));\r\n    let players = this.state.players;\r\n    players.findIndex((player) => {\r\n      if (player.id === id) {\r\n        player.points = player.points + this.state.pointsAmount;\r\n        player.goodAnwsers++;\r\n        player.getPointRecently = true;\r\n        player.style = { opacity: \"1\" };\r\n      }\r\n    });\r\n    players = this.setPlayerSeries(id, players);\r\n    this.setDeleteToUnactive(id);\r\n    this.setState({\r\n      lastActionId: id,\r\n      players,\r\n      previousPlayers: previousPlayers,\r\n      pointsAmount: this.state.pointsAmount + 1,\r\n    });\r\n  };\r\n\r\n  changeAdminStatus = () => {\r\n    this.setState({\r\n      admin: !this.state.admin,\r\n      error: \"\",\r\n    });\r\n  };\r\n\r\n  checkAchievementsForDuplicates = (player, image) => {\r\n    let noDuplicate = true;\r\n    player.achievements.map((achievement) => {\r\n      if (achievement === image) {\r\n        noDuplicate = false;\r\n      }\r\n    });\r\n    return noDuplicate;\r\n  };\r\n\r\n  addAchievementSeries = (image, player, whenActive, series) => {\r\n    if (\r\n      series === whenActive &&\r\n      this.checkAchievementsForDuplicates(player, image)\r\n    ) {\r\n      player.achievements.push(image);\r\n    }\r\n  };\r\n\r\n  addAchievementFirstBlood = (image, player, round) => {\r\n    if (\r\n      round === 2 &&\r\n      this.checkAchievementsForDuplicates(player, image) &&\r\n      player.series > 0\r\n    ) {\r\n      player.achievements.push(image);\r\n    }\r\n  };\r\n\r\n  addAchievementPoints = (image, player, mileStone) => {\r\n    if (\r\n      player.points >= mileStone &&\r\n      this.checkAchievementsForDuplicates(player, image)\r\n    ) {\r\n      player.achievements.push(image);\r\n    }\r\n  };\r\n\r\n  setAchievements = () => {\r\n    const round = this.state.pointsAmount;\r\n    const players = this.state.players.map((player) => {\r\n      this.addAchievementSeries(joyPengu, player, 3, player.series);\r\n      this.addAchievementSeries(perfect, player, 5, player.series);\r\n      this.addAchievementSeries(pozytywnyOpos, player, 5, player.coldSeries);\r\n      this.addAchievementSeries(sadKitten, player, 7, player.coldSeries);\r\n      this.addAchievementSeries(ruinedDay, player, 10, player.coldSeries);\r\n      this.addAchievementFirstBlood(dabPengu, player, round);\r\n      this.addAchievementPoints(beeHappy, player, 5);\r\n      this.addAchievementPoints(happyCat, player, 10);\r\n      this.addAchievementPoints(happyPengu, player, 20);\r\n      this.addAchievementPoints(iLoveIt, player, 30);\r\n      this.addAchievementPoints(jinx, player, 50);\r\n      this.addAchievementPoints(meow, player, 100);\r\n      this.addAchievementPoints(rammus, player, 250);\r\n    });\r\n    return players;\r\n  };\r\n\r\n  render() {\r\n    this.setAchievements();\r\n    return (\r\n      <div className=\"gameContainer\">\r\n        <div className=\"header\">\r\n          <AddPlayer\r\n            inputValue={this.state.addPlayer}\r\n            getInputValue={this.getInputValue}\r\n            addNewPlayer={this.addNewPlayer}\r\n            admin={this.state.admin}\r\n            error={this.state.error}\r\n          />\r\n          <Admin changeAdminStatus={this.changeAdminStatus} />\r\n        </div>\r\n        <div className=\"pointsAmount\">\r\n          Next reward: +{this.state.pointsAmount}\r\n        </div>\r\n\r\n        {this.state.players.length > 0 ? (\r\n          <div style={{ display: \"flex\" }}>\r\n            <Team\r\n              players={this.state.players}\r\n              deletePlayer={this.deletePlayer}\r\n              admin={this.state.admin}\r\n              addPoints={this.addPoints}\r\n              substractPoint={this.subtractPoint}\r\n              lastActionId={this.state.lastActionId}\r\n            />\r\n            <AchievementsContainer\r\n              players={this.state.players}\r\n              rounds={this.state.pointsAmount}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"noPlayersInfo\">You should add players</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}